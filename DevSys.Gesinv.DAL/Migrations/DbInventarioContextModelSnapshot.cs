// <auto-generated />
using System;
using DevSys.Gesinv.DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevSys.Gesinv.DAL.Migrations
{
    [DbContext(typeof(DbInventarioContext))]
    partial class DbInventarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevSys.Gesinv.Models.Bodega", b =>
                {
                    b.Property<int>("BodegaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BodegaId"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaId")
                        .HasColumnType("int");

                    b.HasKey("BodegaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Bodega");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.ColorProducto", b =>
                {
                    b.Property<int>("ColorProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorProductoId"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ColorProductoId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ColorProducto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.CondicionPago", b =>
                {
                    b.Property<int>("CondicionPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CondicionPagoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CondicionPagoId");

                    b.ToTable("CondicionPago");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaId"), 1L, 1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Existencia", b =>
                {
                    b.Property<int>("ExistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExistenciaId"), 1L, 1);

                    b.Property<int?>("BodegaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ExistenciaId");

                    b.HasIndex("BodegaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Existencia");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Ingreso", b =>
                {
                    b.Property<int>("IngresoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngresoId"), 1L, 1);

                    b.Property<int?>("BodegaId")
                        .HasColumnType("int");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Impuestos")
                        .HasColumnType("float");

                    b.Property<int?>("MotivoId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIngresoId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("IngresoId");

                    b.HasIndex("BodegaId");

                    b.HasIndex("MotivoId");

                    b.HasIndex("OrdenCompraId")
                        .IsUnique();

                    b.HasIndex("ProveedorId");

                    b.HasIndex("TipoIngresoId");

                    b.ToTable("Ingreso");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.IngresoDetalle", b =>
                {
                    b.Property<int>("IngresoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngresoDetalleId"), 1L, 1);

                    b.Property<int>("Caja")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IngresoId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioBruto")
                        .HasColumnType("float");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("IngresoDetalleId");

                    b.HasIndex("IngresoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("IngresoDetalle");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Linea", b =>
                {
                    b.Property<int>("LineaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineaId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineaId");

                    b.ToTable("Linea");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.LineaCompra", b =>
                {
                    b.Property<int>("LineaCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineaCompraId"), 1L, 1);

                    b.Property<int?>("Caja")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<int>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("LineaCompraId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("OrdenCompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("LineaCompra");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.LineaSalida", b =>
                {
                    b.Property<int>("LineaSalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineaSalidaId"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<double>("CostoSalida")
                        .HasColumnType("float");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasKey("LineaSalidaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("SalidaId");

                    b.ToTable("LineaSalida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Medida", b =>
                {
                    b.Property<int>("MedidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedidaId"), 1L, 1);

                    b.Property<string>("Dimension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedidaId");

                    b.ToTable("Medida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Motivo", b =>
                {
                    b.Property<int>("MotivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotivoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotivoId");

                    b.ToTable("Motivo");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.OrdenCompra", b =>
                {
                    b.Property<int>("OrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenCompraId"), 1L, 1);

                    b.Property<int>("BodegaId")
                        .HasColumnType("int");

                    b.Property<int>("CondicionPagoId")
                        .HasColumnType("int");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Impuestos")
                        .HasColumnType("float");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("OrdenCompraId");

                    b.HasIndex("BodegaId");

                    b.HasIndex("CondicionPagoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("OrdenCompra");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("Caja")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("int");

                    b.Property<bool>("Iva")
                        .HasColumnType("bit");

                    b.Property<int?>("LineaId")
                        .HasColumnType("int");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int?>("MedidaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Perecible")
                        .HasColumnType("bit");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<int>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("LineaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("MedidaId");

                    b.HasIndex("TipoId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Plazo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoPersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoProveedorId")
                        .HasColumnType("int");

                    b.HasKey("ProveedorId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoPersonaId");

                    b.HasIndex("TipoProveedorId");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Provincia", b =>
                {
                    b.Property<int>("ProvinciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinciaId"), 1L, 1);

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinciaId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Salida", b =>
                {
                    b.Property<int>("SalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalidaId"), 1L, 1);

                    b.Property<int?>("BodegaId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MotivoId")
                        .HasColumnType("int");

                    b.HasKey("SalidaId");

                    b.HasIndex("BodegaId");

                    b.HasIndex("MotivoId");

                    b.ToTable("Salida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Tipo", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoId");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.TipoIngreso", b =>
                {
                    b.Property<int>("TipoIngresoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoIngresoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoIngresoId");

                    b.ToTable("TipoIngreso");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.TipoPersona", b =>
                {
                    b.Property<int>("TipoPersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoPersonaId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoPersonaId");

                    b.ToTable("TipoPersona");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.TipoProveedor", b =>
                {
                    b.Property<int>("TipoProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoProveedorId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoProveedorId");

                    b.ToTable("TipoProveedor");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Bodega", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Empresa", "Empresa")
                        .WithMany("Bodega")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("DevSys.Gesinv.Models.Estado", "Estado")
                        .WithMany("Bodega")
                        .HasForeignKey("EstadoId");

                    b.HasOne("DevSys.Gesinv.Models.Provincia", "Provincia")
                        .WithMany("Bodega")
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.ColorProducto", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Color", "Color")
                        .WithMany("ColorProducto")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSys.Gesinv.Models.Producto", "Producto")
                        .WithMany("ColorProducto")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Existencia", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Bodega", "Bodega")
                        .WithMany("Existencia")
                        .HasForeignKey("BodegaId");

                    b.HasOne("DevSys.Gesinv.Models.Producto", "Producto")
                        .WithMany("Existencia")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Bodega");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Ingreso", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Bodega", "Bodega")
                        .WithMany("Ingreso")
                        .HasForeignKey("BodegaId");

                    b.HasOne("DevSys.Gesinv.Models.Motivo", "Motivo")
                        .WithMany("Ingreso")
                        .HasForeignKey("MotivoId");

                    b.HasOne("DevSys.Gesinv.Models.OrdenCompra", "OrdenCompra")
                        .WithOne("Ingreso")
                        .HasForeignKey("DevSys.Gesinv.Models.Ingreso", "OrdenCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSys.Gesinv.Models.Proveedor", "Proveedor")
                        .WithMany("Ingreso")
                        .HasForeignKey("ProveedorId");

                    b.HasOne("DevSys.Gesinv.Models.TipoIngreso", "TipoIngreso")
                        .WithMany("Ingreso")
                        .HasForeignKey("TipoIngresoId");

                    b.Navigation("Bodega");

                    b.Navigation("Motivo");

                    b.Navigation("OrdenCompra");

                    b.Navigation("Proveedor");

                    b.Navigation("TipoIngreso");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.IngresoDetalle", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Ingreso", "Ingreso")
                        .WithMany("IngresoDetalle")
                        .HasForeignKey("IngresoId");

                    b.HasOne("DevSys.Gesinv.Models.Producto", "Producto")
                        .WithMany("IngresoDetalle")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Ingreso");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.LineaCompra", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Departamento", "Departamento")
                        .WithMany("LineaCompra")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSys.Gesinv.Models.OrdenCompra", "OrdenCompra")
                        .WithMany("LineaCompra")
                        .HasForeignKey("OrdenCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSys.Gesinv.Models.Producto", "Producto")
                        .WithMany("LineaCompra")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("OrdenCompra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.LineaSalida", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Producto", "Producto")
                        .WithMany("LineaSalida")
                        .HasForeignKey("ProductoId");

                    b.HasOne("DevSys.Gesinv.Models.Salida", "Salida")
                        .WithMany("LineaSalida")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.OrdenCompra", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Bodega", "Bodega")
                        .WithMany("OrdenCompra")
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSys.Gesinv.Models.CondicionPago", "CondicionPago")
                        .WithMany("OrdenCompra")
                        .HasForeignKey("CondicionPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSys.Gesinv.Models.Proveedor", "Proveedor")
                        .WithMany("OrdenCompra")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodega");

                    b.Navigation("CondicionPago");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Producto", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Grupo", "Grupo")
                        .WithMany("Producto")
                        .HasForeignKey("GrupoId");

                    b.HasOne("DevSys.Gesinv.Models.Linea", "Linea")
                        .WithMany("Producto")
                        .HasForeignKey("LineaId");

                    b.HasOne("DevSys.Gesinv.Models.Marca", "Marca")
                        .WithMany("Producto")
                        .HasForeignKey("MarcaId");

                    b.HasOne("DevSys.Gesinv.Models.Medida", "Medida")
                        .WithMany("Producto")
                        .HasForeignKey("MedidaId");

                    b.HasOne("DevSys.Gesinv.Models.Tipo", "Tipo")
                        .WithMany("Producto")
                        .HasForeignKey("TipoId");

                    b.Navigation("Grupo");

                    b.Navigation("Linea");

                    b.Navigation("Marca");

                    b.Navigation("Medida");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Proveedor", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Empresa", "Empresa")
                        .WithMany("Proveedor")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("DevSys.Gesinv.Models.Estado", "Estado")
                        .WithMany("Proveedor")
                        .HasForeignKey("EstadoId");

                    b.HasOne("DevSys.Gesinv.Models.Provincia", "Provincia")
                        .WithMany("Proveedor")
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("DevSys.Gesinv.Models.TipoPersona", "TipoPersona")
                        .WithMany("Proveedor")
                        .HasForeignKey("TipoPersonaId");

                    b.HasOne("DevSys.Gesinv.Models.TipoProveedor", "TipoProveedor")
                        .WithMany("Proveedor")
                        .HasForeignKey("TipoProveedorId");

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("Provincia");

                    b.Navigation("TipoPersona");

                    b.Navigation("TipoProveedor");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Provincia", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Estado", "Estado")
                        .WithMany("Provincia")
                        .HasForeignKey("EstadoId");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Salida", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Bodega", "Bodega")
                        .WithMany("Salida")
                        .HasForeignKey("BodegaId");

                    b.HasOne("DevSys.Gesinv.Models.Motivo", "Motivo")
                        .WithMany("Salida")
                        .HasForeignKey("MotivoId");

                    b.Navigation("Bodega");

                    b.Navigation("Motivo");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Usuario", b =>
                {
                    b.HasOne("DevSys.Gesinv.Models.Empresa", "Empresa")
                        .WithMany("Usuario")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Bodega", b =>
                {
                    b.Navigation("Existencia");

                    b.Navigation("Ingreso");

                    b.Navigation("OrdenCompra");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Color", b =>
                {
                    b.Navigation("ColorProducto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.CondicionPago", b =>
                {
                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Departamento", b =>
                {
                    b.Navigation("LineaCompra");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Empresa", b =>
                {
                    b.Navigation("Bodega");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Estado", b =>
                {
                    b.Navigation("Bodega");

                    b.Navigation("Proveedor");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Grupo", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Ingreso", b =>
                {
                    b.Navigation("IngresoDetalle");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Linea", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Marca", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Medida", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Motivo", b =>
                {
                    b.Navigation("Ingreso");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.OrdenCompra", b =>
                {
                    b.Navigation("Ingreso")
                        .IsRequired();

                    b.Navigation("LineaCompra");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Producto", b =>
                {
                    b.Navigation("ColorProducto");

                    b.Navigation("Existencia");

                    b.Navigation("IngresoDetalle");

                    b.Navigation("LineaCompra");

                    b.Navigation("LineaSalida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Proveedor", b =>
                {
                    b.Navigation("Ingreso");

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Provincia", b =>
                {
                    b.Navigation("Bodega");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Salida", b =>
                {
                    b.Navigation("LineaSalida");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.Tipo", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.TipoIngreso", b =>
                {
                    b.Navigation("Ingreso");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.TipoPersona", b =>
                {
                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("DevSys.Gesinv.Models.TipoProveedor", b =>
                {
                    b.Navigation("Proveedor");
                });
#pragma warning restore 612, 618
        }
    }
}
